#nullable enable
#pragma warning disable CS8601 // Possible null reference assignment.

using System;
using System.Collections;
using System.Collections.Generic;
using WebFormsCore;

{{ for item in Items }}
{{- if item.Namespace }}
namespace {{ item.Namespace }}
{
{{- end }}
    public partial class {{ item.Type }} : IViewStateObject
    {
        private DefaultViewStateValues? _defaultViewStateValues;

        {{ item.IsControl ? "protected override" : "private" }} void TrackViewState(ViewStateProvider provider)
        {
            {{- if item.IsControl }}
            base.TrackViewState(provider);
            {{- end }}

            {{- for prop in item.Properties }}
            provider.TrackViewState<{{ prop.Type }}>({{ prop.Name }});
            {{- end }}

            #nullable disable
            _defaultViewStateValues = new DefaultViewStateValues
            {
                {{- for prop in item.Properties }}
                {{ prop.Name }} = {{ prop.Name }},
                {{- end }}
            };
            #nullable restore
        }

		{{ item.IsControl ? "protected override" : "private" }} void OnWriteViewState(ref ViewStateWriter writer)
        {
            {{- if item.IsControl }}
            base.OnWriteViewState(ref writer);
            {{- end }}

            var defaultValues = _defaultViewStateValues;

            {{ item.FlagType }} flag = 0;
        {{- for prop in item.Properties }}

            // {{ prop.Name }}
        {{- if prop.Type == "bool" }}
            if ({{ prop.Name }}) flag |= {{ prop.Flag }};
        {{- else }}
            var write{{ prop.Name }} = {{ if prop.TrackDefault }}true{{ else }}(defaultValues == null || writer.StoreInViewState<{{ prop.Type }}>({{ prop.Name }}, defaultValues.{{ prop.Name }})){{ end }}
            {{- if prop.ValidateProperty }} && {{ prop.ValidateProperty }}{{ end -}};
            if (write{{ prop.Name }}) flag |= {{ prop.Flag }};
        {{- end }}
        {{- end }}

            writer.Write(flag);

        {{- for prop in item.Properties }}
        {{- if prop.Type != "bool" }}
            if (write{{ prop.Name }}) writer.Write<{{ prop.Type }}>({{ prop.Name }}, defaultValues == null ? default : defaultValues.{{ prop.Name }});
        {{- end }}
        {{- end }}
        }

		{{ item.IsControl ? "protected override" : "private" }} void OnLoadViewState(ref ViewStateReader reader)
        {
            {{- if item.IsControl }}
            base.OnLoadViewState(ref reader);
            {{- end }}

            var flag = reader.Read<{{ item.FlagType }}>();
        {{- for prop in item.Properties }}
        {{- if prop.Type == "bool" }}
            {{ prop.Name }} = (flag & {{ prop.Flag }}) != 0;
        {{- else }}
            if ((flag & {{ prop.Flag }}) != 0) {{ prop.Name }} = reader.Read<{{ prop.Type }}>({{ prop.Name }});
        {{- end }}
        {{- end }}
        }

        bool IViewStateObject.WriteToViewState => true;
        void IViewStateObject.TrackViewState(ViewStateProvider provider) => TrackViewState(provider);
        void IViewStateObject.WriteViewState(ref ViewStateWriter writer) => OnWriteViewState(ref writer);
        void IViewStateObject.ReadViewState(ref ViewStateReader reader) => OnLoadViewState(ref reader);

        private class DefaultViewStateValues
        {
        {{- for prop in item.Properties }}
            public {{ prop.Type }} {{ prop.Name }} { get; set; } = default!;
        {{- end }}
        }
    }
{{- if item.Namespace }}
}
{{- end }}
{{- end }}
