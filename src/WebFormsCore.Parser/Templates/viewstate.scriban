using System;
using System.Collections;
using System.Collections.Generic;
using WebFormsCore;

{{ for item in Items }}
{{- if item.Namespace }}
namespace {{ item.Namespace }}
{
{{- end }}
    public partial class {{ item.Type }} : IViewStateObject
    {
        private DefaultViewStateValues? _defaultViewStateValues;

        protected override void TrackViewState()
        {
            base.TrackViewState();

            #nullable disable
            _defaultViewStateValues = new DefaultViewStateValues
            {
                {{- for prop in item.Properties }}
                {{ prop.Name }} = {{ prop.Name }},
                {{- end }}
            };
            #nullable restore
        }

		protected override void OnWriteViewState(ref ViewStateWriter writer)
        {
            base.OnWriteViewState(ref writer);

            var defaultValues = _defaultViewStateValues;

            {{ item.FlagType }} flag = 0;
        {{- for prop in item.Properties }}
        {{- if prop.Type == "bool" }}
            if ({{ prop.Name }}) flag |= {{ prop.Flag }};
        {{- else }}
            var write{{ prop.Name }} = (defaultValues == null || {{ prop.Name }} != defaultValues.{{ prop.Name }})
            {{- if prop.ValidateProperty }} && {{ prop.ValidateProperty }}{{ end -}};
            if (write{{ prop.Name }}) flag |= {{ prop.Flag }};
        {{- end }}
        {{- end }}

            writer.Write(flag);

        {{- for prop in item.Properties }}
        {{- if prop.Type != "bool" }}
            if (write{{ prop.Name }}) writer.Write<{{ prop.Type }}>({{ prop.Name }});
        {{- end }}
        {{- end }}
        }

		protected override void OnLoadViewState(ref ViewStateReader reader)
        {
            base.OnLoadViewState(ref reader);

            var flag = reader.Read<{{ item.FlagType }}>();
        {{- for prop in item.Properties }}
        {{- if prop.Type == "bool" }}
            {{ prop.Name }} = (flag & {{ prop.Flag }}) != 0;
        {{- else }}
            if ((flag & {{ prop.Flag }}) != 0) {{ prop.Name }} = reader.Read<{{ prop.Type }}>();
        {{- end }}
        {{- end }}
        }

        void IViewStateObject.WriteViewState(ref ViewStateWriter writer) => OnWriteViewState(ref writer);
        void IViewStateObject.ReadViewState(ref ViewStateReader reader) => OnLoadViewState(ref reader);

        private class DefaultViewStateValues
        {
        {{- for prop in item.Properties }}
            public {{ prop.Type }} {{ prop.Name }} { get; set; } = default!;
        {{- end }}
        }
    }
{{- if item.Namespace }}
}
{{- end }}
{{- end }}
