<Project>
  <Import Project="../Directory.Build.props" />

  <Target Name="ReplaceVersion" BeforeTargets="BeforeBuild">
    <ReplaceFileText InputFilename="Sdk.props" OutputFilename="Sdk\Sdk.props" MatchExpression="\$version\$|\$httpStackVersion\$" ReplacementText="$(Version)|$(HttpStackVersion)" />
    <ReplaceFileText InputFilename="Sdk.targets" OutputFilename="Sdk\Sdk.targets" MatchExpression="\$version\$|\$httpStackVersion\$" ReplacementText="$(Version)|$(HttpStackVersion)" />
  </Target>

  <UsingTask TaskName="ReplaceFileText" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildBinPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <InputFilename ParameterType="System.String" Required="true" />
      <OutputFilename ParameterType="System.String" Required="true" />
      <MatchExpression ParameterType="System.String" Required="true" />
      <ReplacementText ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Text.RegularExpressions" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
          if (File.Exists(InputFilename))
          {
            string result = File.ReadAllText(InputFilename);
            var matches = MatchExpression.Split('|');
            var replacements = ReplacementText.Split('|');

            for (int i = 0; i < matches.Length; i++)
            {
              result = Regex.Replace(result, matches[i], replacements[i]);
            }

            File.WriteAllText(
                OutputFilename,
                "<!--\n    This code was generated by a tool.\n\n    Changes to this file may cause incorrect behavior and will be lost if\n    the code is regenerated.\n-->\n\n" +
                result
            );
          }
        ]]>
      </Code>
    </Task>
  </UsingTask>

</Project>
